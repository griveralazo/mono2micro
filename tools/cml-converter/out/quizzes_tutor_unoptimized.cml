ContextMap {
	contains Cluster0
	contains Cluster2
	contains Cluster1
	contains Cluster3

	Cluster3 -> Cluster2

	Cluster0 -> Cluster1

	Cluster0 -> Cluster3

	Cluster3 -> Cluster0

	Cluster3 -> Cluster1

	Cluster2 -> Cluster1

	Cluster1 -> Cluster0

	Cluster1 -> Cluster2

	Cluster1 -> Cluster3
}

BoundedContext Cluster0 {
	Application Cluster0_Application {
		/* Operation names were generated to show the ordered sequence of read/write accesses to entities when an operation is called. */
		Service Cluster0_Service {
			void importAll_step3;
			void exportQuiz_step2;
			void getQuizAnswers_step7;
			void getQuizAnswers_step5;
			void getQuizAnswers_step2;
			void exportQuiz_step5;
			void exportCourseExecutionInfo_step2;
			void exportQuiz_step7;
			void getQuizTimeFraudScores_step5;
			void getQuizTimeFraudScores_step7;
			void exportCourseExecutionInfo_step5;
			void exportCourseExecutionInfo_step7;
			void updateFailedAnswers_step1;
			void getQuizTimeFraudScores_step2;
			void concludeQuiz_step2;
		}
		Coordination ImportAll_Coordination {
			Cluster1::Cluster1_Service::importAll_step0;
			Cluster3::Cluster3_Service::importAll_step1;
			Cluster1::Cluster1_Service::importAll_step2;
			Cluster0::Cluster0_Service::importAll_step3;
			Cluster1::Cluster1_Service::importAll_step4;
		}
	}
	Aggregate Cluster0 {
		/* 
		 * Metrics:
		 * - Percentage of external accesses: 16.22% (6/37)
		 * - Percentage of local accesses: 20.0% (1/5) */
		Entity CodeFillInAnswer {
			- Set<CodeFillInOption_Reference> codeFillInOptions
		}
		/* 
		 * Metrics:
		 * - Percentage of external accesses: 16.22% (6/37)
		 * - Percentage of local accesses: 20.0% (1/5) */
		Entity AnswerDetails {
			Integer id
			- QuestionAnswer_Reference questionAnswer
		}
		/* 
		 * Metrics:
		 * - Percentage of external accesses: 16.22% (6/37)
		 * - Percentage of local accesses: 20.0% (1/5) */
		Entity MultipleChoiceAnswer {
			- Option_Reference option
		}
		/* 
		 * This entity was created to reference the 'QuestionAnswer' entity of the 'Cluster1' aggregate. */
		Entity QuestionAnswer_Reference
		/* 
		 * This entity was created to reference the 'CodeOrderSlot' entity of the 'Cluster3' aggregate. */
		Entity CodeOrderSlot_Reference
		/* 
		 * Metrics:
		 * - Percentage of external accesses: 35.14% (13/37)
		 * - Percentage of local accesses: 0.0% (0/5) */
		Entity QuizAnswerItem {
			LocalDateTime answerDate
			String answers
			Integer quizId
			Integer id
			Integer quizAnswerId
		}
		/* 
		 * This entity was created to reference the 'Option' entity of the 'Cluster3' aggregate. */
		Entity Option_Reference
		/* 
		 * Metrics:
		 * - Percentage of external accesses: 16.22% (6/37)
		 * - Percentage of local accesses: 20.0% (1/5) */
		Entity CodeOrderAnswer {
			- Set<CodeOrderAnswerSlot> orderedSlots
		}
		/* 
		 * This entity was created to reference the 'CodeFillInOption' entity of the 'Cluster3' aggregate. */
		Entity CodeFillInOption_Reference
		/* 
		 * Metrics:
		 * - Percentage of external accesses: 0.0% (0/37)
		 * - Percentage of local accesses: 20.0% (1/5) */
		Entity CodeOrderAnswerSlot {
			Integer id
			Integer assignedOrder
			- CodeOrderAnswer codeOrderAnswer
			- CodeOrderSlot_Reference codeOrderSlot
		}
	}
}

BoundedContext Cluster2 {
	Application Cluster2_Application {
		/* Operation names were generated to show the ordered sequence of read/write accesses to entities when an operation is called. */
		Service Cluster2_Service {
			void anonymizeUser_step0;
			void getQuizByQRCode_step2;
			void submitAnswer_step1;
			void exportQuiz_step3;
			void getQuizAnswers_step3;
			void getQuizTimeFraudScores_step3;
			void getQuizByCode_step2;
			void startQuiz_step2;
			void solveQuiz_step2;
			void exportCourseExecutionInfo_step3;
			void anonymizeCourseExecutionUsers_step0;
		}
		Coordination AnonymizeUser_Coordination {
			Cluster2::Cluster2_Service::anonymizeUser_step0;
			Cluster1::Cluster1_Service::anonymizeUser_step1;
		}

		Coordination AnonymizeCourseExecutionUsers_Coordination {
			Cluster2::Cluster2_Service::anonymizeCourseExecutionUsers_step0;
			Cluster1::Cluster1_Service::anonymizeCourseExecutionUsers_step1;
		}
	}
	Aggregate Cluster2 {
		/* 
		 * Metrics:
		 * - Percentage of external accesses: 23.33% (7/30)
		 * - Percentage of local accesses: 0.0% (0/2) */
		Entity MultipleChoiceAnswerItem {
			Integer optionId
		}
		/* 
		 * Metrics:
		 * - Percentage of external accesses: 30.0% (9/30)
		 * - Percentage of local accesses: 100.0% (2/2) */
		Entity QuestionAnswerItem {
			Integer id
			Integer quizQuestionId
			Integer quizId
			LocalDateTime answerDate
			String username
			Integer timeTaken
			Integer timeToSubmission
		}
		/* 
		 * Metrics:
		 * - Percentage of external accesses: 23.33% (7/30)
		 * - Percentage of local accesses: 0.0% (0/2) */
		Entity CodeFillInAnswerItem {
			List<Integer> optionIds
		}
		/* 
		 * Metrics:
		 * - Percentage of external accesses: 23.33% (7/30)
		 * - Percentage of local accesses: 0.0% (0/2) */
		Entity CodeOrderAnswerItem {
			List<CodeOrderSlotAnswerItem> orderedSlots
		}
	}
}

BoundedContext Cluster1 {
	Application Cluster1_Application {
		Service GetCourseTopics_Service {
			getCourseTopics_step0_OP;
		}
		Service ExternalUserAuth_Service {
			externalUserAuth_step0_OP;
		}
		Service UpdateWeeklyScores_Service {
			updateWeeklyScores_step0_OP;
		}
		Service UpdateDashboardDifficultQuestions_Service {
			updateDashboardDifficultQuestions_step0_OP;
		}
		Service GetCourseExecutionById_Service {
			getCourseExecutionById_step0_OP;
		}
		Service RemoveTournament_Service {
			removeTournament_step0_OP;
		}
		Service DeleteDifficultQuestions_Service {
			deleteDifficultQuestions_step0_OP;
		}
		Service GetCourseStudents_Service {
			getCourseStudents_step0_OP;
		}
		Service DeleteQuiz_Service {
			deleteQuiz_step0_OP;
		}
		Service GetCourseExecutionQuestionSubmissions_Service {
			getCourseExecutionQuestionSubmissions_step0_OP;
		}
		Service GetAvailableAssessments_Service {
			getAvailableAssessments_step0_OP;
		}
		Service GetOpenedTournamentsForCourseExecution_Service {
			getOpenedTournamentsForCourseExecution_step0_OP;
		}
		Service FenixAuth_Service {
			fenixAuth_step0_OP;
		}
		Service UpdateCourseExecutionDifficultQuestions_Service {
			updateCourseExecutionDifficultQuestions_step0_OP;
		}
		Service GetClosedTournamentsForCourseExecution_Service {
			getClosedTournamentsForCourseExecution_step0_OP;
		}
		Service GetQuestion_Service {
			getQuestion_step0_OP;
		}
		Service DeleteExternalInactiveUsers_Service {
			deleteExternalInactiveUsers_step0_OP;
		}
		Service GetAllStudentsQuestionSubmissionsInfo_Service {
			getAllStudentsQuestionSubmissionsInfo_step0_OP;
		}
		Service UpdateQuestionTopics_Service {
			updateQuestionTopics_step0_OP;
		}
		Service CancelTournament_Service {
			cancelTournament_step0_OP;
		}
		Service AssessmentSetStatus_Service {
			assessmentSetStatus_step0_OP;
		}
		Service GetExecutionCourseTopicConjunctions_Service {
			getExecutionCourseTopicConjunctions_step0_OP;
		}
		Service UpdateTopic_Service {
			updateTopic_step0_OP;
		}
		Service UpdateAssessment_Service {
			updateAssessment_step0_OP;
		}
		Service CreateExternalCourseExecution_Service {
			createExternalCourseExecution_step0_OP;
		}
		Service RemoveTopic_Service {
			removeTopic_step0_OP;
		}
		Service GetTournamentsForCourseExecution_Service {
			getTournamentsForCourseExecution_step0_OP;
		}
		Service LeaveTournament_Service {
			leaveTournament_step0_OP;
		}
		Service RegisterExternalUsersCsvFile_Service {
			registerExternalUsersCsvFile_step0_OP;
		}
		Service GetExecutionCourseAssessments_Service {
			getExecutionCourseAssessments_step0_OP;
		}
		Service GetAssessmentQuestions_Service {
			getAssessmentQuestions_step0_OP;
		}
		Service CreateTopic_Service {
			createTopic_step0_OP;
		}
		Service GetTournament_Service {
			getTournament_step0_OP;
		}
		Service DemoTeacherAuth_Service {
			demoTeacherAuth_step0_OP;
		}
		Service GetSolvedQuizzes_Service {
			getSolvedQuizzes_step0_OP;
		}
		Service ToggleTeacherNotificationRead_Service {
			toggleTeacherNotificationRead_step0_OP;
		}
		Service DemoAdminAuth_Service {
			demoAdminAuth_step0_OP;
		}
		Service GetQuiz_Service {
			getQuiz_step0_OP;
		}
		Service GetCourseQuestions_Service {
			getCourseQuestions_step0_OP;
		}
		Service GetAvailableTopicsByCourseExecution_Service {
			getAvailableTopicsByCourseExecution_step0_OP;
		}
		Service CreateReview_Service {
			createReview_step0_OP;
		}
		Service GetTopicConjunctionQuestions_Service {
			getTopicConjunctionQuestions_step0_OP;
		}
		Service UpdateQuestionSubmissionTopics_Service {
			updateQuestionSubmissionTopics_step0_OP;
		}
		Service ToggleStudentNotificationRead_Service {
			toggleStudentNotificationRead_step0_OP;
		}
		Service GetCourseExecutions_Service {
			getCourseExecutions_step0_OP;
		}
		Service GetQuizCommunicationFraudScores_Service {
			getQuizCommunicationFraudScores_step0_OP;
		}
		Service RemoveSubmittedQuestion_Service {
			removeSubmittedQuestion_step0_OP;
		}
		Service QuestionSetStatus_Service {
			questionSetStatus_step0_OP;
		}
		Service ExportAll_Service {
			exportAll_step0_OP;
		}
		Service GetTopicQuestions_Service {
			getTopicQuestions_step0_OP;
		}
		Service GetQuestionSubmissionReviews_Service {
			getQuestionSubmissionReviews_step0_OP;
		}
		Service ExportQuestions_Service {
			exportQuestions_step0_OP;
		}
		Service GetDashboard_Service {
			getDashboard_step0_OP;
		}
		Service RemoveAssessment_Service {
			removeAssessment_step0_OP;
		}
		Service GetStats_Service {
			getStats_step0_OP;
		}
		Service CreateAssessment_Service {
			createAssessment_step0_OP;
		}
		Service GetClarificationsByQuestionId_Service {
			getClarificationsByQuestionId_step0_OP;
		}
		Service DemoStudentAuth_Service {
			demoStudentAuth_step0_OP;
		}
		Service CreateTournament_Service {
			createTournament_step0_OP;
		}
		/* Operation names were generated to show the ordered sequence of read/write accesses to entities when an operation is called. */
		Service Cluster1_Service {
			void importAll_step2;
			void exportQuiz_step1;
			void exportQuiz_step4;
			void importAll_step4;
			void getCourseQuestionsByQuery_step0;
			void exportQuiz_step6;
			void exportQuiz_step8;
			void importAll_step0;
			void createDiscussion_step0;
			void getQuizByCode_step3;
			void uploadImage_step1;
			void anonymizeUser_step1;
			void getAvailableQuizzes_step1;
			void getQuizAnswers_step6;
			void getQuizAnswers_step4;
			void changeReplyAvailability_step0;
			void getQuizAnswers_step1;
			void updateQuestion_step1;
			void createQuestion_step2;
			void createQuestion_step0;
			void updateFailedAnswers_step0;
			void findNonGeneratedQuizzes_step0;
			void submitAnswer_step0;
			void getQuizByQRCode_step3;
			void changeDiscussionStatus_step0;
			void getQuizByCode_step1;
			void getCourseExecutionDiscussions_step1;
			void duplicateQuiz_step1;
			void createQuiz_step1;
			void getNewQuiz_step1;
			void importQuestions_step2;
			void getOpenCourseExecutionDiscussions_step1;
			void updateTournament_step1;
			void concludeQuiz_step1;
			void getQuestionForQuizAnswer_step0;
			void getQuizTimeFraudScores_step6;
			void getQuizByQRCode_step1;
			void importQuestions_step0;
			void updateFailedAnswers_step3;
			void startQuiz_step1;
			void solveQuiz_step3;
			void startQuiz_step3;
			void anonymizeCourseExecutionUsers_step1;
			void concludeQuiz_step3;
			void getStatementQuestion_step0;
			void solveQuiz_step1;
			void updateQuiz_step0;
			void exportCourseExecutionInfo_step1;
			void populateWithQuizAnswers_step0;
			void exportCourseExecutionInfo_step4;
			void exportCourseExecutionInfo_step6;
			void exportCourseExecutionInfo_step8;
			void createQuestionSubmission_step0;
			void createQuestionSubmission_step2;
			void getQuizTimeFraudScores_step1;
			void updateQuestionSubmission_step1;
			void getQuizTimeFraudScores_step4;
			void getDiscussionsByUserId_step0;
			void removeNonFilledQuizAnswers_step1;
		}
		Service RemoveQuestion_Service {
			removeQuestion_step0_OP;
		}
		Service AddReply_Service {
			addReply_step0_OP;
		}
		Service RemoveCourseExecution_Service {
			removeCourseExecution_step0_OP;
		}
		Service RemoveFailedAnswer_Service {
			removeFailedAnswer_step0_OP;
		}
		Service RegisterExternalUser_Service {
			registerExternalUser_step0_OP;
		}
		Service GetAvailableQuestions_Service {
			getAvailableQuestions_step0_OP;
		}
		Service GetStudentQuestionSubmissions_Service {
			getStudentQuestionSubmissions_step0_OP;
		}
		Service ActivateCourseExecution_Service {
			activateCourseExecution_step0_OP;
		}
		Service JoinTournament_Service {
			joinTournament_step0_OP;
		}
		Service ConfirmRegistration_Service {
			confirmRegistration_step0_OP;
		}
		Coordination GetQuestionForQuizAnswer_Coordination {
			Cluster1::Cluster1_Service::getQuestionForQuizAnswer_step0;
			Cluster3::Cluster3_Service::getQuestionForQuizAnswer_step1;
		}

		Coordination UpdateFailedAnswers_Coordination {
			Cluster1::Cluster1_Service::updateFailedAnswers_step0;
			Cluster0::Cluster0_Service::updateFailedAnswers_step1;
			Cluster3::Cluster3_Service::updateFailedAnswers_step2;
			Cluster1::Cluster1_Service::updateFailedAnswers_step3;
		}

		Coordination ChangeDiscussionStatus_Coordination {
			Cluster1::Cluster1_Service::changeDiscussionStatus_step0;
			Cluster3::Cluster3_Service::changeDiscussionStatus_step1;
		}

		Coordination GetDiscussionsByUserId_Coordination {
			Cluster1::Cluster1_Service::getDiscussionsByUserId_step0;
			Cluster3::Cluster3_Service::getDiscussionsByUserId_step1;
		}

		Coordination GetCourseQuestionsByQuery_Coordination {
			Cluster1::Cluster1_Service::getCourseQuestionsByQuery_step0;
			Cluster3::Cluster3_Service::getCourseQuestionsByQuery_step1;
		}

		Coordination GetStatementQuestion_Coordination {
			Cluster1::Cluster1_Service::getStatementQuestion_step0;
			Cluster3::Cluster3_Service::getStatementQuestion_step1;
		}

		Coordination CreateQuestion_Coordination {
			Cluster1::Cluster1_Service::createQuestion_step0;
			Cluster3::Cluster3_Service::createQuestion_step1;
			Cluster1::Cluster1_Service::createQuestion_step2;
		}

		Coordination ChangeReplyAvailability_Coordination {
			Cluster1::Cluster1_Service::changeReplyAvailability_step0;
			Cluster3::Cluster3_Service::changeReplyAvailability_step1;
		}

		Coordination UpdateQuiz_Coordination {
			Cluster1::Cluster1_Service::updateQuiz_step0;
			Cluster3::Cluster3_Service::updateQuiz_step1;
		}

		Coordination CreateDiscussion_Coordination {
			Cluster1::Cluster1_Service::createDiscussion_step0;
			Cluster3::Cluster3_Service::createDiscussion_step1;
		}

		Coordination SubmitAnswer_Coordination {
			Cluster1::Cluster1_Service::submitAnswer_step0;
			Cluster2::Cluster2_Service::submitAnswer_step1;
		}

		Coordination PopulateWithQuizAnswers_Coordination {
			Cluster1::Cluster1_Service::populateWithQuizAnswers_step0;
			Cluster3::Cluster3_Service::populateWithQuizAnswers_step1;
		}

		Coordination FindNonGeneratedQuizzes_Coordination {
			Cluster1::Cluster1_Service::findNonGeneratedQuizzes_step0;
			Cluster3::Cluster3_Service::findNonGeneratedQuizzes_step1;
		}
	}
	Aggregate Cluster1 {
		/* 
		 * Metrics:
		 * - Percentage of external accesses: 0.3% (1/328)
		 * - Percentage of local accesses: 0.2% (1/490) */
		Entity DemoAdmin
		/* 
		 * Metrics:
		 * - Percentage of external accesses: 3.66% (12/328)
		 * - Percentage of local accesses: 2.86% (14/490) */
		Entity Discussion {
			String message
			boolean closed
			LocalDateTime date
			Integer id
			- QuestionAnswer questionAnswer
			- CourseExecution courseExecution
			- List<Reply> replies
			- Student student
			- Question question
		}
		/* 
		 * Metrics:
		 * - Percentage of external accesses: 0.61% (2/328)
		 * - Percentage of local accesses: 3.47% (17/490) */
		Entity Tournament {
			LocalDateTime startTime
			boolean isCanceled
			Integer numberOfQuestions
			Integer id
			int MAX_NUMBER_OF_QUESTIONS
			LocalDateTime endTime
			boolean privateTournament
			String password
			- Quiz quiz
			- Set<Student> participants
			- Set<Topic> topics
			- Student creator
			- CourseExecution courseExecution
		}
		/* 
		 * Metrics:
		 * - Percentage of external accesses: 12.2% (40/328)
		 * - Percentage of local accesses: 6.12% (30/490) */
		Entity Quiz {
			QuizType ^type
			boolean scramble
			String title
			boolean oneWay
			Integer ^key
			LocalDateTime availableDate
			LocalDateTime creationDate
			Integer id
			LocalDateTime resultsDate
			Integer code
			Integer series
			String version
			LocalDateTime conclusionDate
			boolean qrCodeOnly
			- List<QuizQuestion> quizQuestions
			- Tournament tournament
			- Set<QuizAnswer> quizAnswers
			- CourseExecution courseExecution
		}
		/* 
		 * Metrics:
		 * - Percentage of external accesses: 1.52% (5/328)
		 * - Percentage of local accesses: 1.84% (9/490) */
		Entity Teacher
		/* 
		 * Metrics:
		 * - Percentage of external accesses: 3.66% (12/328)
		 * - Percentage of local accesses: 2.65% (13/490) */
		Entity Reply {
			boolean isPublic
			int id
			LocalDateTime date
			String message
			- User user
			- Discussion discussion
		}
		/* 
		 * Metrics:
		 * - Percentage of external accesses: 0.0% (0/328)
		 * - Percentage of local accesses: 0.82% (4/490) */
		Entity FailedAnswer {
			boolean answered
			Integer id
			LocalDateTime collected
			- Dashboard dashboard
			- QuestionAnswer questionAnswer
		}
		/* 
		 * Metrics:
		 * - Percentage of external accesses: 9.76% (32/328)
		 * - Percentage of local accesses: 3.67% (18/490) */
		Entity QuizAnswer {
			List<Integer> questionIds
			Integer id
			Boolean fraud
			boolean usedInStatistics
			boolean completed
			LocalDateTime creationDate
			LocalDateTime answerDate
			Integer currentSequenceQuestion
			- List<QuestionAnswer> questionAnswers
			- Quiz quiz
			- Student student
		}
		/* 
		 * Metrics:
		 * - Percentage of external accesses: 0.3% (1/328)
		 * - Percentage of local accesses: 1.22% (6/490) */
		Entity AuthDemoUser
		/* 
		 * Metrics:
		 * - Percentage of external accesses: 0.0% (0/328)
		 * - Percentage of local accesses: 0.82% (4/490) */
		Entity DifficultQuestion {
			Integer id
			int percentage
			- Question question
			- CourseExecution courseExecution
		}
		/* 
		 * This entity was created to reference the 'Image' entity of the 'Cluster3' aggregate. */
		Entity Image_Reference
		/* 
		 * This entity was created to reference the 'AnswerDetails' entity of the 'Cluster0' aggregate. */
		Entity AnswerDetails_Reference
		/* 
		 * Metrics:
		 * - Percentage of external accesses: 0.3% (1/328)
		 * - Percentage of local accesses: 1.22% (6/490) */
		Entity AuthTecnicoUser {
			String enrolledCoursesAcronyms
		}
		/* 
		 * This entity was created to reference the 'QuestionDetails' entity of the 'Cluster3' aggregate. */
		Entity QuestionDetails_Reference
		/* 
		 * Metrics:
		 * - Percentage of external accesses: 0.61% (2/328)
		 * - Percentage of local accesses: 2.65% (13/490) */
		Entity Assessment {
			Integer sequence
			Status status
			Integer id
			String title
			- CourseExecution courseExecution
			- List<TopicConjunction> topicConjunctions
		}
		/* 
		 * Metrics:
		 * - Percentage of external accesses: 0.61% (2/328)
		 * - Percentage of local accesses: 2.65% (13/490) */
		Entity QuestionSubmission {
			Integer id
			boolean teacherRead
			Status status
			boolean studentRead
			- CourseExecution courseExecution
			- Student submitter
			- Set<Review> reviews
			- Question question
		}
		/* 
		 * Metrics:
		 * - Percentage of external accesses: 6.4% (21/328)
		 * - Percentage of local accesses: 8.16% (40/490) */
		Entity AuthUser {
			Integer id
			String ^email
			List<Integer> courseExecutionsIds
			LocalDateTime lastAccess
			String password
			String username
			- User user
		}
		/* 
		 * Metrics:
		 * - Percentage of external accesses: 8.54% (28/328)
		 * - Percentage of local accesses: 2.45% (12/490) */
		Entity QuizQuestion {
			Integer sequence
			Integer id
			- Quiz quiz
			- Question question
			- Set<QuestionAnswer> questionAnswers
		}
		/* 
		 * Metrics:
		 * - Percentage of external accesses: 1.52% (5/328)
		 * - Percentage of local accesses: 2.45% (12/490) */
		Entity Dashboard {
			Set<RemovedDifficultQuestion> removedDifficultQuestions
			LocalDateTime lastCheckFailedAnswers
			int numberOfStudentAnswers
			int numberOfCorrectStudentAnswers
			int numberOfTeacherAnswers
			int numberOfInClassQuizzes
			int numberOfCorrectTeacherAnswers
			LocalDateTime lastCheckWeeklyScores
			int numberOfCorrectInClassAnswers
			int numberOfTeacherQuizzes
			int numberOfStudentQuizzes
			Integer id
			int numberOfInClassAnswers
			- Student student
			- CourseExecution courseExecution
			- Set<FailedAnswer> failedAnswers
			- Set<WeeklyScore> weeklyScores
		}
		/* 
		 * Metrics:
		 * - Percentage of external accesses: 9.76% (32/328)
		 * - Percentage of local accesses: 6.94% (34/490) */
		Entity Student {
			- Set<Tournament> tournaments
			- Set<QuizAnswer> quizAnswers
			- Set<Discussion> discussions
			- Set<Dashboard> dashboards
			- Set<QuestionSubmission> questionSubmissions
		}
		/* 
		 * Metrics:
		 * - Percentage of external accesses: 9.15% (30/328)
		 * - Percentage of local accesses: 13.06% (64/490) */
		Entity CourseExecution {
			LocalDateTime endDate
			Integer id
			Type ^type
			String academicTerm
			Status status
			String acronym
			- Set<Assessment> assessments
			- Set<QuestionSubmission> questionSubmissions
			- Course course
			- Set<Discussion> discussions
			- Set<User> users
			- Set<Quiz> quizzes
			- Set<DifficultQuestion> difficultQuestions
		}
		/* 
		 * Metrics:
		 * - Percentage of external accesses: 7.62% (25/328)
		 * - Percentage of local accesses: 8.98% (44/490) */
		Entity User {
			Integer ^key
			Role role
			LocalDateTime creationDate
			Integer id
			Boolean admin
			String name
			- Set<Reply> replies
			- Set<Review> reviews
			- Set<CourseExecution> courseExecutions
			- AuthUser authUser
		}
		/* 
		 * Metrics:
		 * - Percentage of external accesses: 0.3% (1/328)
		 * - Percentage of local accesses: 1.84% (9/490) */
		Entity AuthExternalUser {
			String confirmationToken
			Boolean active
			LocalDateTime tokenGenerationDate
		}
		/* 
		 * Metrics:
		 * - Percentage of external accesses: 0.3% (1/328)
		 * - Percentage of local accesses: 2.45% (12/490) */
		Entity TopicConjunction {
			Integer id
			- Assessment assessment
			- Set<Topic> topics
		}
		/* 
		 * Metrics:
		 * - Percentage of external accesses: 0.0% (0/328)
		 * - Percentage of local accesses: 0.2% (1/490) */
		Entity WeeklyScore {
			LocalDate week
			int percentageCorrect
			Integer id
			int questionsAnswered
			int questionsUniquelyAnswered
			int quizzesAnswered
			int improvedCorrectAnswers
			boolean closed
			- Dashboard dashboard
		}
		/* 
		 * Metrics:
		 * - Percentage of external accesses: 0.0% (0/328)
		 * - Percentage of local accesses: 0.61% (3/490) */
		Entity Review {
			String comment
			LocalDateTime creationDate
			Type ^type
			Integer id
			- User user
			- QuestionSubmission questionSubmission
		}
		/* 
		 * Metrics:
		 * - Percentage of external accesses: 8.23% (27/328)
		 * - Percentage of local accesses: 2.65% (13/490) */
		Entity QuestionAnswer {
			Integer sequence
			Integer timeTaken
			Integer id
			- QuizQuestion quizQuestion
			- QuizAnswer quizAnswer
			- Discussion discussion
			- AnswerDetails_Reference answerDetails
		}
		/* 
		 * Metrics:
		 * - Percentage of external accesses: 10.06% (33/328)
		 * - Percentage of local accesses: 8.37% (41/490) */
		Entity Question {
			Integer id
			Status status
			Integer numberOfAnswers
			String title
			LocalDateTime creationDate
			Integer ^key
			String content
			Integer numberOfCorrect
			- Set<QuizQuestion> quizQuestions
			- Set<Discussion> discussions
			- Set<Topic> topics
			- Course course
			- QuestionDetails_Reference questionDetails
			- Image_Reference image
		}
		/* 
		 * Metrics:
		 * - Percentage of external accesses: 1.22% (4/328)
		 * - Percentage of local accesses: 5.1% (25/490) */
		Entity Topic {
			String name
			Integer id
			- List<TopicConjunction> topicConjunctions
			- Set<Question> questions
			- Course course
			- Set<Tournament> tournaments
		}
		/* 
		 * Metrics:
		 * - Percentage of external accesses: 3.35% (11/328)
		 * - Percentage of local accesses: 6.53% (32/490) */
		Entity Course {
			String name
			Integer id
			Type ^type
			- Set<Question> questions
			- Set<Topic> topics
			- Set<CourseExecution> courseExecutions
		}
	}
}

BoundedContext Cluster3 {
	Application Cluster3_Application {
		/* Operation names were generated to show the ordered sequence of read/write accesses to entities when an operation is called. */
		Service Cluster3_Service {
			void getOpenCourseExecutionDiscussions_step0;
			void updateTournament_step0;
			void getCourseQuestionsByQuery_step1;
			void createQuiz_step0;
			void concludeQuiz_step0;
			void importAll_step1;
			void getQuestionForQuizAnswer_step1;
			void createDiscussion_step1;
			void getQuizByQRCode_step0;
			void exportQuiz_step0;
			void importQuestions_step1;
			void uploadImage_step0;
			void uploadImage_step2;
			void getAvailableQuizzes_step0;
			void startQuiz_step0;
			void getStatementQuestion_step1;
			void solveQuiz_step0;
			void changeReplyAvailability_step1;
			void updateQuiz_step1;
			void exportCourseExecutionInfo_step0;
			void getQuizAnswers_step0;
			void populateWithQuizAnswers_step1;
			void createQuestion_step1;
			void updateQuestion_step0;
			void findNonGeneratedQuizzes_step1;
			void updateFailedAnswers_step2;
			void createQuestionSubmission_step1;
			void getQuizTimeFraudScores_step0;
			void getQuizByCode_step0;
			void updateQuestionSubmission_step0;
			void getCourseExecutionDiscussions_step0;
			void changeDiscussionStatus_step1;
			void duplicateQuiz_step0;
			void getDiscussionsByUserId_step1;
			void removeNonFilledQuizAnswers_step0;
			void getNewQuiz_step0;
		}
		Coordination GetQuizByCode_Coordination {
			Cluster3::Cluster3_Service::getQuizByCode_step0;
			Cluster1::Cluster1_Service::getQuizByCode_step1;
			Cluster2::Cluster2_Service::getQuizByCode_step2;
			Cluster1::Cluster1_Service::getQuizByCode_step3;
		}

		Coordination ConcludeQuiz_Coordination {
			Cluster3::Cluster3_Service::concludeQuiz_step0;
			Cluster1::Cluster1_Service::concludeQuiz_step1;
			Cluster0::Cluster0_Service::concludeQuiz_step2;
			Cluster1::Cluster1_Service::concludeQuiz_step3;
		}

		Coordination ExportCourseExecutionInfo_Coordination {
			Cluster3::Cluster3_Service::exportCourseExecutionInfo_step0;
			Cluster1::Cluster1_Service::exportCourseExecutionInfo_step1;
			Cluster0::Cluster0_Service::exportCourseExecutionInfo_step2;
			Cluster2::Cluster2_Service::exportCourseExecutionInfo_step3;
			Cluster1::Cluster1_Service::exportCourseExecutionInfo_step4;
			Cluster0::Cluster0_Service::exportCourseExecutionInfo_step5;
			Cluster1::Cluster1_Service::exportCourseExecutionInfo_step6;
			Cluster0::Cluster0_Service::exportCourseExecutionInfo_step7;
			Cluster1::Cluster1_Service::exportCourseExecutionInfo_step8;
		}

		Coordination GetQuizByQRCode_Coordination {
			Cluster3::Cluster3_Service::getQuizByQRCode_step0;
			Cluster1::Cluster1_Service::getQuizByQRCode_step1;
			Cluster2::Cluster2_Service::getQuizByQRCode_step2;
			Cluster1::Cluster1_Service::getQuizByQRCode_step3;
		}

		Coordination UpdateTournament_Coordination {
			Cluster3::Cluster3_Service::updateTournament_step0;
			Cluster1::Cluster1_Service::updateTournament_step1;
		}

		Coordination GetQuizTimeFraudScores_Coordination {
			Cluster3::Cluster3_Service::getQuizTimeFraudScores_step0;
			Cluster1::Cluster1_Service::getQuizTimeFraudScores_step1;
			Cluster0::Cluster0_Service::getQuizTimeFraudScores_step2;
			Cluster2::Cluster2_Service::getQuizTimeFraudScores_step3;
			Cluster1::Cluster1_Service::getQuizTimeFraudScores_step4;
			Cluster0::Cluster0_Service::getQuizTimeFraudScores_step5;
			Cluster1::Cluster1_Service::getQuizTimeFraudScores_step6;
			Cluster0::Cluster0_Service::getQuizTimeFraudScores_step7;
		}

		Coordination StartQuiz_Coordination {
			Cluster3::Cluster3_Service::startQuiz_step0;
			Cluster1::Cluster1_Service::startQuiz_step1;
			Cluster2::Cluster2_Service::startQuiz_step2;
			Cluster1::Cluster1_Service::startQuiz_step3;
		}

		Coordination RemoveNonFilledQuizAnswers_Coordination {
			Cluster3::Cluster3_Service::removeNonFilledQuizAnswers_step0;
			Cluster1::Cluster1_Service::removeNonFilledQuizAnswers_step1;
		}

		Coordination CreateQuestionSubmission_Coordination {
			Cluster1::Cluster1_Service::createQuestionSubmission_step0;
			Cluster3::Cluster3_Service::createQuestionSubmission_step1;
			Cluster1::Cluster1_Service::createQuestionSubmission_step2;
		}

		Coordination UpdateQuestion_Coordination {
			Cluster3::Cluster3_Service::updateQuestion_step0;
			Cluster1::Cluster1_Service::updateQuestion_step1;
		}

		Coordination UpdateQuestionSubmission_Coordination {
			Cluster3::Cluster3_Service::updateQuestionSubmission_step0;
			Cluster1::Cluster1_Service::updateQuestionSubmission_step1;
		}

		Coordination CreateQuiz_Coordination {
			Cluster3::Cluster3_Service::createQuiz_step0;
			Cluster1::Cluster1_Service::createQuiz_step1;
		}

		Coordination GetAvailableQuizzes_Coordination {
			Cluster3::Cluster3_Service::getAvailableQuizzes_step0;
			Cluster1::Cluster1_Service::getAvailableQuizzes_step1;
		}

		Coordination GetNewQuiz_Coordination {
			Cluster3::Cluster3_Service::getNewQuiz_step0;
			Cluster1::Cluster1_Service::getNewQuiz_step1;
		}

		Coordination GetQuizAnswers_Coordination {
			Cluster3::Cluster3_Service::getQuizAnswers_step0;
			Cluster1::Cluster1_Service::getQuizAnswers_step1;
			Cluster0::Cluster0_Service::getQuizAnswers_step2;
			Cluster2::Cluster2_Service::getQuizAnswers_step3;
			Cluster1::Cluster1_Service::getQuizAnswers_step4;
			Cluster0::Cluster0_Service::getQuizAnswers_step5;
			Cluster1::Cluster1_Service::getQuizAnswers_step6;
			Cluster0::Cluster0_Service::getQuizAnswers_step7;
		}

		Coordination DuplicateQuiz_Coordination {
			Cluster3::Cluster3_Service::duplicateQuiz_step0;
			Cluster1::Cluster1_Service::duplicateQuiz_step1;
		}

		Coordination UploadImage_Coordination {
			Cluster3::Cluster3_Service::uploadImage_step0;
			Cluster1::Cluster1_Service::uploadImage_step1;
			Cluster3::Cluster3_Service::uploadImage_step2;
		}

		Coordination GetCourseExecutionDiscussions_Coordination {
			Cluster3::Cluster3_Service::getCourseExecutionDiscussions_step0;
			Cluster1::Cluster1_Service::getCourseExecutionDiscussions_step1;
		}

		Coordination GetOpenCourseExecutionDiscussions_Coordination {
			Cluster3::Cluster3_Service::getOpenCourseExecutionDiscussions_step0;
			Cluster1::Cluster1_Service::getOpenCourseExecutionDiscussions_step1;
		}

		Coordination ImportQuestions_Coordination {
			Cluster1::Cluster1_Service::importQuestions_step0;
			Cluster3::Cluster3_Service::importQuestions_step1;
			Cluster1::Cluster1_Service::importQuestions_step2;
		}

		Coordination ExportQuiz_Coordination {
			Cluster3::Cluster3_Service::exportQuiz_step0;
			Cluster1::Cluster1_Service::exportQuiz_step1;
			Cluster0::Cluster0_Service::exportQuiz_step2;
			Cluster2::Cluster2_Service::exportQuiz_step3;
			Cluster1::Cluster1_Service::exportQuiz_step4;
			Cluster0::Cluster0_Service::exportQuiz_step5;
			Cluster1::Cluster1_Service::exportQuiz_step6;
			Cluster0::Cluster0_Service::exportQuiz_step7;
			Cluster1::Cluster1_Service::exportQuiz_step8;
		}

		Coordination SolveQuiz_Coordination {
			Cluster3::Cluster3_Service::solveQuiz_step0;
			Cluster1::Cluster1_Service::solveQuiz_step1;
			Cluster2::Cluster2_Service::solveQuiz_step2;
			Cluster1::Cluster1_Service::solveQuiz_step3;
		}
	}
	Aggregate Cluster3 {
		/* 
		 * This entity was created to reference the 'Question' entity of the 'Cluster1' aggregate. */
		Entity Question_Reference
		/* 
		 * Metrics:
		 * - Percentage of external accesses: 5.06% (4/79)
		 * - Percentage of local accesses: 8.59% (11/128) */
		Entity CodeFillInOption {
			String content
			Integer sequence
			boolean correct
			Integer id
			- Set<CodeFillInAnswer_Reference> questionAnswers
			- CodeFillInSpot codeFillInSpot
		}
		/* 
		 * This entity was created to reference the 'MultipleChoiceAnswer' entity of the 'Cluster0' aggregate. */
		Entity MultipleChoiceAnswer_Reference
		/* 
		 * Metrics:
		 * - Percentage of external accesses: 16.46% (13/79)
		 * - Percentage of local accesses: 14.84% (19/128) */
		Entity MultipleChoiceQuestion {
			- List<Option> options
		}
		/* 
		 * Metrics:
		 * - Percentage of external accesses: 16.46% (13/79)
		 * - Percentage of local accesses: 15.63% (20/128) */
		Entity Image {
			Integer width
			Integer id
			String ^url
			- Question_Reference question
		}
		/* 
		 * Metrics:
		 * - Percentage of external accesses: 3.8% (3/79)
		 * - Percentage of local accesses: 3.91% (5/128) */
		Entity CodeOrderSlot {
			Integer sequence
			String content
			Integer id
			Integer order
			- Set<CodeOrderAnswerSlot_Reference> orderedSlots
			- CodeOrderQuestion questionDetails
		}
		/* 
		 * This entity was created to reference the 'CodeOrderAnswerSlot' entity of the 'Cluster0' aggregate. */
		Entity CodeOrderAnswerSlot_Reference
		/* 
		 * Metrics:
		 * - Percentage of external accesses: 3.8% (3/79)
		 * - Percentage of local accesses: 5.47% (7/128) */
		Entity CodeFillInSpot {
			Integer id
			Integer sequence
			- List<CodeFillInOption> options
			- CodeFillInQuestion questionDetails
		}
		/* 
		 * Metrics:
		 * - Percentage of external accesses: 5.06% (4/79)
		 * - Percentage of local accesses: 5.47% (7/128) */
		Entity Option {
			String content
			Integer sequence
			Integer id
			boolean correct
			- MultipleChoiceQuestion questionDetails
			- Set<MultipleChoiceAnswer_Reference> questionAnswers
		}
		/* 
		 * Metrics:
		 * - Percentage of external accesses: 16.46% (13/79)
		 * - Percentage of local accesses: 16.41% (21/128) */
		Entity QuestionDetails {
			Integer id
			- Question_Reference question
		}
		/* 
		 * Metrics:
		 * - Percentage of external accesses: 16.46% (13/79)
		 * - Percentage of local accesses: 14.84% (19/128) */
		Entity CodeFillInQuestion {
			Languages language
			String code
			- List<CodeFillInSpot> codeFillInSpots
		}
		/* 
		 * Metrics:
		 * - Percentage of external accesses: 16.46% (13/79)
		 * - Percentage of local accesses: 14.84% (19/128) */
		Entity CodeOrderQuestion {
			Languages language
			- List<CodeOrderSlot> codeOrderSlots
		}
		/* 
		 * This entity was created to reference the 'CodeFillInAnswer' entity of the 'Cluster0' aggregate. */
		Entity CodeFillInAnswer_Reference
	}
}

